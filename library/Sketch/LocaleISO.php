<?php
/**
 * This file is part of the Sketch library
 *
 * @author Marcos Cooper <marcos@releasepad.com>
 * @version 2.0.12
 * @copyright 2007 Marcos Cooper
 * @link http://releasepad.com/sketch
 * @package Sketch
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, you can get a copy from the
 * following link: http://opensource.org/licenses/lgpl-2.1.php
 */

namespace Sketch;

class LocaleISO extends Object {
    /**
     * @var array
     */
    private static $localizedCountries = array();

    /**
     * @var array
     */
    private static $localizedLanguages = array();

    /**
     * @return array
     */
    static function getMonthNames() {
        $application = Application::getInstance();
        $locale = $application->getLocale();
        $translator = ($locale instanceof Locale) ? $locale->getTranslator() : new LocaleTranslator(new LocaleTranslatorDriverMock());
        return array(1 => $translator->_s('January'), $translator->_s('February'), $translator->_s('March'), $translator->_s('April'), $translator->_s('May'), $translator->_s('June'), $translator->_s('July'), $translator->_s('August'), $translator->_s('September'), $translator->_s('October'), $translator->_s('November'), $translator->_s('December'));
    }

    /**
     * @param null $filter
     * @return array
     */
    static function getCountries($filter = null) {
        $application = Application::getInstance();
        $locale = $application->getLocale();
        $translator = ($locale instanceof Locale) ? $locale->getTranslator() : new LocaleTranslator(new LocaleTranslatorDriverMock());
        $locale_string = $translator->getDriver()->getLocaleString();
        if (!array_key_exists($locale_string, self::$localizedCountries)) {
            self::$localizedCountries[$locale_string] = array(
                'af' => $translator->_s('Afghanistan'),
                'ax' => $translator->_s('Aland islands'),
                'al' => $translator->_s('Albania'),
                'dz' => $translator->_s('Algeria'),
                'as' => $translator->_s('American samoa'),
                'ad' => $translator->_s('Andorra'),
                'ao' => $translator->_s('Angola'),
                'ai' => $translator->_s('Anguilla'),
                'aq' => $translator->_s('Antarctica'),
                'ag' => $translator->_s('Antigua and barbuda'),
                'ar' => $translator->_s('Argentina'),
                'am' => $translator->_s('Armenia'),
                'aw' => $translator->_s('Aruba'),
                'au' => $translator->_s('Australia'),
                'at' => $translator->_s('Austria'),
                'az' => $translator->_s('Azerbaijan'),
                'bs' => $translator->_s('Bahamas'),
                'bh' => $translator->_s('Bahrain'),
                'bd' => $translator->_s('Bangladesh'),
                'bb' => $translator->_s('Barbados'),
                'by' => $translator->_s('Belarus'),
                'be' => $translator->_s('Belgium'),
                'bz' => $translator->_s('Belize'),
                'bj' => $translator->_s('Benin'),
                'bm' => $translator->_s('Bermuda'),
                'bt' => $translator->_s('Bhutan'),
                'bo' => $translator->_s('Bolivia'),
                'ba' => $translator->_s('Bosnia and herzegovina'),
                'bw' => $translator->_s('Botswana'),
                'bv' => $translator->_s('Bouvet island'),
                'br' => $translator->_s('Brazil'),
                'io' => $translator->_s('British indian ocean territory'),
                'bn' => $translator->_s('Brunei darussalam'),
                'bg' => $translator->_s('Bulgaria'),
                'bf' => $translator->_s('Burkina faso'),
                'bi' => $translator->_s('Burundi'),
                'kh' => $translator->_s('Bambodia'),
                'cm' => $translator->_s('Cameroon'),
                'ca' => $translator->_s('Canada'),
                'cv' => $translator->_s('Cape verde'),
                'ky' => $translator->_s('Cayman islands'),
                'cf' => $translator->_s('Central african republic'),
                'td' => $translator->_s('Chad'),
                'cl' => $translator->_s('Chile'),
                'cn' => $translator->_s('China'),
                'cx' => $translator->_s('Christmas island'),
                'cc' => $translator->_s('Cocos (keeling) islands'),
                'co' => $translator->_s('Colombia'),
                'km' => $translator->_s('Comoros'),
                'cg' => $translator->_s('Congo'),
                'cd' => $translator->_s('Congo, The democratic republic of the'),
                'ck' => $translator->_s('Cook islands'),
                'cr' => $translator->_s('Costa rica'),
                'ci' => $translator->_s('CÃ´te d\'ivoire'),
                'hr' => $translator->_s('Croatia'),
                'cu' => $translator->_s('Cuba'),
                'cy' => $translator->_s('Cyprus'),
                'cz' => $translator->_s('Czech republic'),
                'dk' => $translator->_s('Denmark'),
                'dj' => $translator->_s('Djibouti'),
                'dm' => $translator->_s('Dominica'),
                'do' => $translator->_s('Dominican republic'),
                'ec' => $translator->_s('Ecuador'),
                'eg' => $translator->_s('Egypt'),
                'sv' => $translator->_s('El salvador'),
                'gq' => $translator->_s('Equatorial guinea'),
                'er' => $translator->_s('Eritrea'),
                'ee' => $translator->_s('Estonia'),
                'et' => $translator->_s('Ethiopia'),
                'fk' => $translator->_s('Falkland islands (malvinas)'),
                'fo' => $translator->_s('Faroe islands'),
                'fj' => $translator->_s('Fiji'),
                'fi' => $translator->_s('Finland'),
                'fr' => $translator->_s('France'),
                'gf' => $translator->_s('French guiana'),
                'pf' => $translator->_s('French polynesia'),
                'tf' => $translator->_s('French southern territories'),
                'ga' => $translator->_s('Gabon'),
                'gm' => $translator->_s('Gambia'),
                'ge' => $translator->_s('Georgia'),
                'de' => $translator->_s('Germany'),
                'gh' => $translator->_s('Ghana'),
                'gi' => $translator->_s('Gibraltar'),
                'gr' => $translator->_s('Greece'),
                'gl' => $translator->_s('Greenland'),
                'gd' => $translator->_s('Grenada'),
                'gp' => $translator->_s('Guadeloupe'),
                'gu' => $translator->_s('Guam'),
                'gt' => $translator->_s('Guatemala'),
                'gg' => $translator->_s('Guernsey'),
                'gn' => $translator->_s('Guinea'),
                'gw' => $translator->_s('Guinea-bissau'),
                'gy' => $translator->_s('Guyana'),
                'ht' => $translator->_s('Haiti'),
                'hm' => $translator->_s('Heard island and mcdonald islands'),
                'va' => $translator->_s('Holy see (vatican city state)'),
                'hn' => $translator->_s('Honduras'),
                'hk' => $translator->_s('Hong kong'),
                'hu' => $translator->_s('Hungary'),
                'is' => $translator->_s('Iceland'),
                'in' => $translator->_s('India'),
                'id' => $translator->_s('Indonesia'),
                'ir' => $translator->_s('Iran, Islamic republic of'),
                'iq' => $translator->_s('Iraq'),
                'ie' => $translator->_s('Ireland'),
                'im' => $translator->_s('Isle of man'),
                'il' => $translator->_s('Israel'),
                'it' => $translator->_s('Italy'),
                'jm' => $translator->_s('Jamaica'),
                'jp' => $translator->_s('Japan'),
                'je' => $translator->_s('Jersey'),
                'jo' => $translator->_s('Jordan'),
                'kz' => $translator->_s('Kazakhstan'),
                'ke' => $translator->_s('Kenya'),
                'ki' => $translator->_s('Kiribati'),
                'kp' => $translator->_s('Korea, Democratic people\'s republic of'),
                'kr' => $translator->_s('Korea, Republic of'),
                'kw' => $translator->_s('Kuwait'),
                'kg' => $translator->_s('Kyrgyzstan'),
                'la' => $translator->_s('Lao people\'s democratic republic'),
                'lv' => $translator->_s('Latvia'),
                'lb' => $translator->_s('Lebanon'),
                'ls' => $translator->_s('Lesotho'),
                'lr' => $translator->_s('Liberia'),
                'ly' => $translator->_s('Libyan arab jamahiriya'),
                'li' => $translator->_s('Liechtenstein'),
                'lt' => $translator->_s('Lithuania'),
                'lu' => $translator->_s('Luxembourg'),
                'mo' => $translator->_s('Macao'),
                'mk' => $translator->_s('Macedonia, The former yugoslav republic of'),
                'mg' => $translator->_s('Madagascar'),
                'mw' => $translator->_s('Malawi'),
                'my' => $translator->_s('Malaysia'),
                'mv' => $translator->_s('Maldives'),
                'ml' => $translator->_s('Mali'),
                'mt' => $translator->_s('Malta'),
                'mh' => $translator->_s('Marshall islands'),
                'mq' => $translator->_s('Martinique'),
                'mr' => $translator->_s('Mauritania'),
                'mu' => $translator->_s('Mauritius'),
                'yt' => $translator->_s('Mayotte'),
                'mx' => $translator->_s('Mexico'),
                'fm' => $translator->_s('Micronesia, Federated states of'),
                'md' => $translator->_s('Moldova, Republic of'),
                'mc' => $translator->_s('Monaco'),
                'mn' => $translator->_s('Mongolia'),
                'me' => $translator->_s('Montenegro'),
                'ms' => $translator->_s('Montserrat'),
                'ma' => $translator->_s('Morocco'),
                'mz' => $translator->_s('Mozambique'),
                'mm' => $translator->_s('Myanmar'),
                'na' => $translator->_s('Namibia'),
                'nr' => $translator->_s('Nauru'),
                'np' => $translator->_s('Nepal'),
                'nl' => $translator->_s('Netherlands'),
                'an' => $translator->_s('Netherlands antilles'),
                'nc' => $translator->_s('New caledonia'),
                'nz' => $translator->_s('New zealand'),
                'ni' => $translator->_s('Nicaragua'),
                'ne' => $translator->_s('Niger'),
                'ng' => $translator->_s('Nigeria'),
                'nu' => $translator->_s('Niue'),
                'nf' => $translator->_s('Norfolk island'),
                'mp' => $translator->_s('Northern mariana islands'),
                'no' => $translator->_s('Norway'),
                'om' => $translator->_s('Oman'),
                'pk' => $translator->_s('Pakistan'),
                'pw' => $translator->_s('Palau'),
                'ps' => $translator->_s('Palestinian territory, Occupied'),
                'pa' => $translator->_s('Panama'),
                'pg' => $translator->_s('Papua new guinea'),
                'py' => $translator->_s('Paraguay'),
                'pe' => $translator->_s('Peru'),
                'ph' => $translator->_s('Philippines'),
                'pn' => $translator->_s('Pitcairn'),
                'pl' => $translator->_s('Poland'),
                'pt' => $translator->_s('Portugal'),
                'pr' => $translator->_s('Puerto rico'),
                'qa' => $translator->_s('Qatar'),
                're' => $translator->_s('Reunion'),
                'ro' => $translator->_s('Romania'),
                'ru' => $translator->_s('Russian federation'),
                'rw' => $translator->_s('Rwanda'),
                'bl' => $translator->_s('Saint barthÃ©lemy'),
                'sh' => $translator->_s('Saint helena'),
                'kn' => $translator->_s('Saint kitts and nevis'),
                'lc' => $translator->_s('Saint lucia'),
                'mf' => $translator->_s('Saint martin'),
                'pm' => $translator->_s('Saint pierre and miquelon'),
                'vc' => $translator->_s('Saint vincent and the grenadines'),
                'ws' => $translator->_s('Samoa'),
                'sm' => $translator->_s('San marino'),
                'st' => $translator->_s('Sao tome and principe'),
                'sa' => $translator->_s('Saudi arabia'),
                'sn' => $translator->_s('Senegal'),
                'rs' => $translator->_s('Serbia'),
                'sc' => $translator->_s('Seychelles'),
                'sl' => $translator->_s('Sierra leone'),
                'sg' => $translator->_s('Singapore'),
                'sk' => $translator->_s('Slovakia'),
                'si' => $translator->_s('Slovenia'),
                'sb' => $translator->_s('Solomon islands'),
                'so' => $translator->_s('Somalia'),
                'za' => $translator->_s('South africa'),
                'gs' => $translator->_s('South georgia and the south sandwich islands'),
                'es' => $translator->_s('Spain'),
                'lk' => $translator->_s('Sri lanka'),
                'sd' => $translator->_s('Sudan'),
                'sr' => $translator->_s('Suriname'),
                'sj' => $translator->_s('Svalbard and jan mayen'),
                'sz' => $translator->_s('Swaziland'),
                'se' => $translator->_s('Sweden'),
                'ch' => $translator->_s('Switzerland'),
                'sy' => $translator->_s('Syrian arab republic'),
                'tw' => $translator->_s('Taiwan, Province of china'),
                'tj' => $translator->_s('Tajikistan'),
                'tz' => $translator->_s('Tanzania, United republic of'),
                'th' => $translator->_s('Thailand'),
                'tl' => $translator->_s('Timor-leste'),
                'tg' => $translator->_s('Togo'),
                'tk' => $translator->_s('Tokelau'),
                'to' => $translator->_s('Tonga'),
                'tt' => $translator->_s('Trinidad and tobago'),
                'tn' => $translator->_s('Tunisia'),
                'tr' => $translator->_s('Turkey'),
                'tm' => $translator->_s('Turkmenistan'),
                'tc' => $translator->_s('Turks and caicos islands'),
                'tv' => $translator->_s('Tuvalu'),
                'ug' => $translator->_s('Uganda'),
                'ua' => $translator->_s('Ukraine'),
                'ae' => $translator->_s('United arab emirates'),
                'gb' => $translator->_s('United kingdom'),
                'us' => $translator->_s('United states'),
                'um' => $translator->_s('United states minor outlying islands'),
                'uy' => $translator->_s('Uruguay'),
                'uz' => $translator->_s('Uzbekistan'),
                'vu' => $translator->_s('Vanuatu'),
                've' => $translator->_s('Venezuela'),
                'vn' => $translator->_s('Viet nam'),
                'vg' => $translator->_s('Virgin islands, British'),
                'vi' => $translator->_s('Virgin islands, U.S.'),
                'wf' => $translator->_s('Wallis and futuna'),
                'eh' => $translator->_s('Western sahara'),
                'ye' => $translator->_s('Yemen'),
                'zm' => $translator->_s('Zambia'),
                'zw' => $translator->_s('Zimbabwe')
            );
            asort(self::$localizedCountries[$locale_string]);
        }
        if (is_array($filter)) {
            return array_intersect_key(self::$localizedCountries[$locale_string], array_flip($filter));
        } else {
            return self::$localizedCountries[$locale_string];
        }
    }

    /**
     * @return array
     */
    static function getLanguages() {
        $application = Application::getInstance();
        $locale = $application->getLocale();
        $translator = ($locale instanceof Locale) ? $locale->getTranslator() : new LocaleTranslator(new LocaleTranslatorDriverMock());
        $locale_string = $translator->getDriver()->getLocaleString();
        if (!array_key_exists($locale_string, self::$localizedLanguages)) {
            self::$localizedLanguages[$locale_string] = array(
                'aa' => $translator->_s('Afar'),
                'ab' => $translator->_s('Abkhazian'),
                'af' => $translator->_s('Afrikaans'),
                'am' => $translator->_s('Amharic'),
                'ar' => $translator->_s('Arabic'),
                'as' => $translator->_s('Assamese'),
                'ay' => $translator->_s('Aymara'),
                'az' => $translator->_s('Azerbaijani'),
                'ba' => $translator->_s('Bashkir'),
                'be' => $translator->_s('Byelorussian'),
                'bg' => $translator->_s('Bulgarian'),
                'bh' => $translator->_s('Bihari'),
                'bi' => $translator->_s('Bislama'),
                'bn' => $translator->_s('Bengali; bangla'),
                'bo' => $translator->_s('Tibetan'),
                'br' => $translator->_s('Breton'),
                'ca' => $translator->_s('Catalan'),
                'co' => $translator->_s('Corsican'),
                'cs' => $translator->_s('Czech'),
                'cy' => $translator->_s('Welsh'),
                'da' => $translator->_s('Danish'),
                'de' => $translator->_s('German'),
                'dz' => $translator->_s('Bhutani'),
                'el' => $translator->_s('Greek'),
                'en' => $translator->_s('English'),
                'eo' => $translator->_s('Esperanto'),
                'es' => $translator->_s('Spanish'),
                'et' => $translator->_s('Estonian'),
                'eu' => $translator->_s('Basque'),
                'fa' => $translator->_s('Persian'),
                'fi' => $translator->_s('Finnish'),
                'fj' => $translator->_s('Fiji'),
                'fo' => $translator->_s('Faroese'),
                'fr' => $translator->_s('French'),
                'fy' => $translator->_s('Frisian'),
                'ga' => $translator->_s('Irish'),
                'gd' => $translator->_s('Scots gaelic'),
                'gl' => $translator->_s('Galician'),
                'gn' => $translator->_s('Guarani'),
                'gu' => $translator->_s('Gujarati'),
                'ha' => $translator->_s('Hausa'),
                'he' => $translator->_s('Hebrew (formerly iw)'),
                'hi' => $translator->_s('Hindi'),
                'hr' => $translator->_s('Croatian'),
                'hu' => $translator->_s('Hungarian'),
                'hy' => $translator->_s('Armenian'),
                'ia' => $translator->_s('Interlingua'),
                'id' => $translator->_s('Indonesian (formerly in)'),
                'ie' => $translator->_s('Interlingue'),
                'ik' => $translator->_s('Inupiak'),
                'is' => $translator->_s('Icelandic'),
                'it' => $translator->_s('Italian'),
                'iu' => $translator->_s('Inuktitut'),
                'ja' => $translator->_s('Japanese'),
                'jw' => $translator->_s('Javanese'),
                'ka' => $translator->_s('Georgian'),
                'kk' => $translator->_s('Kazakh'),
                'kl' => $translator->_s('Greenlandic'),
                'km' => $translator->_s('Cambodian'),
                'kn' => $translator->_s('Kannada'),
                'ko' => $translator->_s('Korean'),
                'ks' => $translator->_s('Kashmiri'),
                'ku' => $translator->_s('Kurdish'),
                'ky' => $translator->_s('Kirghiz'),
                'la' => $translator->_s('Latin'),
                'ln' => $translator->_s('Lingala'),
                'lo' => $translator->_s('Laothian'),
                'lt' => $translator->_s('Lithuanian'),
                'lv' => $translator->_s('Latvian, lettish'),
                'mg' => $translator->_s('Malagasy'),
                'mi' => $translator->_s('Maori'),
                'mk' => $translator->_s('Macedonian'),
                'ml' => $translator->_s('Malayalam'),
                'mn' => $translator->_s('Mongolian'),
                'mo' => $translator->_s('Moldavian'),
                'mr' => $translator->_s('Marathi'),
                'ms' => $translator->_s('Malay'),
                'mt' => $translator->_s('Maltese'),
                'my' => $translator->_s('Burmese'),
                'na' => $translator->_s('Nauru'),
                'ne' => $translator->_s('Nepali'),
                'nl' => $translator->_s('Dutch'),
                'no' => $translator->_s('Norwegian'),
                'oc' => $translator->_s('Occitan'),
                'om' => $translator->_s('(Afan) Oromo'),
                'or' => $translator->_s('Oriya'),
                'pa' => $translator->_s('Punjabi'),
                'pl' => $translator->_s('Polish'),
                'ps' => $translator->_s('Pashto, pushto'),
                'pt' => $translator->_s('Portuguese'),
                'qu' => $translator->_s('Quechua'),
                'rm' => $translator->_s('Rhaeto-romance'),
                'rn' => $translator->_s('Kirundi'),
                'ro' => $translator->_s('Romanian'),
                'ru' => $translator->_s('Russian'),
                'rw' => $translator->_s('Kinyarwanda'),
                'sa' => $translator->_s('Sanskrit'),
                'sd' => $translator->_s('Sindhi'),
                'sg' => $translator->_s('Sangho'),
                'sh' => $translator->_s('Serbo-croatian'),
                'si' => $translator->_s('Sinhalese'),
                'sk' => $translator->_s('Slovak'),
                'sl' => $translator->_s('Slovenian'),
                'sm' => $translator->_s('Samoan'),
                'sn' => $translator->_s('Shona'),
                'so' => $translator->_s('Somali'),
                'sq' => $translator->_s('Albanian'),
                'sr' => $translator->_s('Serbian'),
                'ss' => $translator->_s('Siswati'),
                'st' => $translator->_s('Sesotho'),
                'su' => $translator->_s('Sundanese'),
                'sv' => $translator->_s('Swedish'),
                'sw' => $translator->_s('Swahili'),
                'ta' => $translator->_s('Tamil'),
                'te' => $translator->_s('Telugu'),
                'tg' => $translator->_s('Tajik'),
                'th' => $translator->_s('Thai'),
                'ti' => $translator->_s('Tigrinya'),
                'tk' => $translator->_s('Turkmen'),
                'tl' => $translator->_s('Tagalog'),
                'tn' => $translator->_s('Setswana'),
                'to' => $translator->_s('Tonga'),
                'tr' => $translator->_s('Turkish'),
                'ts' => $translator->_s('Tsonga'),
                'tt' => $translator->_s('Tatar'),
                'tw' => $translator->_s('Twi'),
                'ug' => $translator->_s('Uighur'),
                'uk' => $translator->_s('Ukrainian'),
                'ur' => $translator->_s('Urdu'),
                'uz' => $translator->_s('Uzbek'),
                'vi' => $translator->_s('Vietnamese'),
                'vo' => $translator->_s('Volapuk'),
                'wo' => $translator->_s('Wolof'),
                'xh' => $translator->_s('Xhosa'),
                'yi' => $translator->_s('Yiddish (formerly ji)'),
                'yo' => $translator->_s('Yoruba'),
                'za' => $translator->_s('Zhuang'),
                'zh' => $translator->_s('Chinese'),
                'zu' => $translator->_s('Zulu')
            );
            asort(self::$localizedLanguages);
        }
        return self::$localizedLanguages[$locale_string];
    }
}