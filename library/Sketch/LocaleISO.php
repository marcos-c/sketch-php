<?php
/**
 * This file is part of the Sketch library
 *
 * @author Marcos Cooper <marcos@releasepad.com>
 * @version 2.0.12
 * @copyright 2007 Marcos Cooper
 * @link http://releasepad.com/sketch
 * @package Sketch
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, you can get a copy from the
 * following link: http://opensource.org/licenses/lgpl-2.1.php
 */

namespace Sketch;

class LocaleISO extends Object {
    /**
     * @var array
     */
    private static $localizedCountries = array();

    /**
     * @var array
     */
    private static $localizedLanguages = array();

    /**
     * @return array
     */
    static function getMonthNames() {
        $application = Application::getInstance();
        $locale = $application->getLocale();
        $translator = ($locale instanceof Locale) ? $locale->getTranslator() : new LocaleTranslator(new LocaleTranslatorDriverMock());
        return array(1 => $translator->_('January'), $translator->_('February'), $translator->_('March'), $translator->_('April'), $translator->_('May'), $translator->_('June'), $translator->_('July'), $translator->_('August'), $translator->_('September'), $translator->_('October'), $translator->_('November'), $translator->_('December'));
    }

    /**
     * @param null $filter
     * @return array
     */
    static function getCountries($filter = null) {
        $application = Application::getInstance();
        $locale = $application->getLocale();
        $translator = ($locale instanceof Locale) ? $locale->getTranslator() : new LocaleTranslator(new LocaleTranslatorDriverMock());
        $locale_string = $translator->getDriver()->getLocaleString();
        if (!array_key_exists($locale_string, self::$localizedCountries)) {
            self::$localizedCountries[$locale_string] = array(
                'af' => $translator->_('Afghanistan'),
                'ax' => $translator->_('Aland islands'),
                'al' => $translator->_('Albania'),
                'dz' => $translator->_('Algeria'),
                'as' => $translator->_('American samoa'),
                'ad' => $translator->_('Andorra'),
                'ao' => $translator->_('Angola'),
                'ai' => $translator->_('Anguilla'),
                'aq' => $translator->_('Antarctica'),
                'ag' => $translator->_('Antigua and barbuda'),
                'ar' => $translator->_('Argentina'),
                'am' => $translator->_('Armenia'),
                'aw' => $translator->_('Aruba'),
                'au' => $translator->_('Australia'),
                'at' => $translator->_('Austria'),
                'az' => $translator->_('Azerbaijan'),
                'bs' => $translator->_('Bahamas'),
                'bh' => $translator->_('Bahrain'),
                'bd' => $translator->_('Bangladesh'),
                'bb' => $translator->_('Barbados'),
                'by' => $translator->_('Belarus'),
                'be' => $translator->_('Belgium'),
                'bz' => $translator->_('Belize'),
                'bj' => $translator->_('Benin'),
                'bm' => $translator->_('Bermuda'),
                'bt' => $translator->_('Bhutan'),
                'bo' => $translator->_('Bolivia'),
                'ba' => $translator->_('Bosnia and herzegovina'),
                'bw' => $translator->_('Botswana'),
                'bv' => $translator->_('Bouvet island'),
                'br' => $translator->_('Brazil'),
                'io' => $translator->_('British indian ocean territory'),
                'bn' => $translator->_('Brunei darussalam'),
                'bg' => $translator->_('Bulgaria'),
                'bf' => $translator->_('Burkina faso'),
                'bi' => $translator->_('Burundi'),
                'kh' => $translator->_('Bambodia'),
                'cm' => $translator->_('Cameroon'),
                'ca' => $translator->_('Canada'),
                'cv' => $translator->_('Cape verde'),
                'ky' => $translator->_('Cayman islands'),
                'cf' => $translator->_('Central african republic'),
                'td' => $translator->_('Chad'),
                'cl' => $translator->_('Chile'),
                'cn' => $translator->_('China'),
                'cx' => $translator->_('Christmas island'),
                'cc' => $translator->_('Cocos (keeling) islands'),
                'co' => $translator->_('Colombia'),
                'km' => $translator->_('Comoros'),
                'cg' => $translator->_('Congo'),
                'cd' => $translator->_('Congo, The democratic republic of the'),
                'ck' => $translator->_('Cook islands'),
                'cr' => $translator->_('Costa rica'),
                'ci' => $translator->_('CÃ´te d\'ivoire'),
                'hr' => $translator->_('Croatia'),
                'cu' => $translator->_('Cuba'),
                'cy' => $translator->_('Cyprus'),
                'cz' => $translator->_('Czech republic'),
                'dk' => $translator->_('Denmark'),
                'dj' => $translator->_('Djibouti'),
                'dm' => $translator->_('Dominica'),
                'do' => $translator->_('Dominican republic'),
                'ec' => $translator->_('Ecuador'),
                'eg' => $translator->_('Egypt'),
                'sv' => $translator->_('El salvador'),
                'gq' => $translator->_('Equatorial guinea'),
                'er' => $translator->_('Eritrea'),
                'ee' => $translator->_('Estonia'),
                'et' => $translator->_('Ethiopia'),
                'fk' => $translator->_('Falkland islands (malvinas)'),
                'fo' => $translator->_('Faroe islands'),
                'fj' => $translator->_('Fiji'),
                'fi' => $translator->_('Finland'),
                'fr' => $translator->_('France'),
                'gf' => $translator->_('French guiana'),
                'pf' => $translator->_('French polynesia'),
                'tf' => $translator->_('French southern territories'),
                'ga' => $translator->_('Gabon'),
                'gm' => $translator->_('Gambia'),
                'ge' => $translator->_('Georgia'),
                'de' => $translator->_('Germany'),
                'gh' => $translator->_('Ghana'),
                'gi' => $translator->_('Gibraltar'),
                'gr' => $translator->_('Greece'),
                'gl' => $translator->_('Greenland'),
                'gd' => $translator->_('Grenada'),
                'gp' => $translator->_('Guadeloupe'),
                'gu' => $translator->_('Guam'),
                'gt' => $translator->_('Guatemala'),
                'gg' => $translator->_('Guernsey'),
                'gn' => $translator->_('Guinea'),
                'gw' => $translator->_('Guinea-bissau'),
                'gy' => $translator->_('Guyana'),
                'ht' => $translator->_('Haiti'),
                'hm' => $translator->_('Heard island and mcdonald islands'),
                'va' => $translator->_('Holy see (vatican city state)'),
                'hn' => $translator->_('Honduras'),
                'hk' => $translator->_('Hong kong'),
                'hu' => $translator->_('Hungary'),
                'is' => $translator->_('Iceland'),
                'in' => $translator->_('India'),
                'id' => $translator->_('Indonesia'),
                'ir' => $translator->_('Iran, Islamic republic of'),
                'iq' => $translator->_('Iraq'),
                'ie' => $translator->_('Ireland'),
                'im' => $translator->_('Isle of man'),
                'il' => $translator->_('Israel'),
                'it' => $translator->_('Italy'),
                'jm' => $translator->_('Jamaica'),
                'jp' => $translator->_('Japan'),
                'je' => $translator->_('Jersey'),
                'jo' => $translator->_('Jordan'),
                'kz' => $translator->_('Kazakhstan'),
                'ke' => $translator->_('Kenya'),
                'ki' => $translator->_('Kiribati'),
                'kp' => $translator->_('Korea, Democratic people\'s republic of'),
                'kr' => $translator->_('Korea, Republic of'),
                'kw' => $translator->_('Kuwait'),
                'kg' => $translator->_('Kyrgyzstan'),
                'la' => $translator->_('Lao people\'s democratic republic'),
                'lv' => $translator->_('Latvia'),
                'lb' => $translator->_('Lebanon'),
                'ls' => $translator->_('Lesotho'),
                'lr' => $translator->_('Liberia'),
                'ly' => $translator->_('Libyan arab jamahiriya'),
                'li' => $translator->_('Liechtenstein'),
                'lt' => $translator->_('Lithuania'),
                'lu' => $translator->_('Luxembourg'),
                'mo' => $translator->_('Macao'),
                'mk' => $translator->_('Macedonia, The former yugoslav republic of'),
                'mg' => $translator->_('Madagascar'),
                'mw' => $translator->_('Malawi'),
                'my' => $translator->_('Malaysia'),
                'mv' => $translator->_('Maldives'),
                'ml' => $translator->_('Mali'),
                'mt' => $translator->_('Malta'),
                'mh' => $translator->_('Marshall islands'),
                'mq' => $translator->_('Martinique'),
                'mr' => $translator->_('Mauritania'),
                'mu' => $translator->_('Mauritius'),
                'yt' => $translator->_('Mayotte'),
                'mx' => $translator->_('Mexico'),
                'fm' => $translator->_('Micronesia, Federated states of'),
                'md' => $translator->_('Moldova, Republic of'),
                'mc' => $translator->_('Monaco'),
                'mn' => $translator->_('Mongolia'),
                'me' => $translator->_('Montenegro'),
                'ms' => $translator->_('Montserrat'),
                'ma' => $translator->_('Morocco'),
                'mz' => $translator->_('Mozambique'),
                'mm' => $translator->_('Myanmar'),
                'na' => $translator->_('Namibia'),
                'nr' => $translator->_('Nauru'),
                'np' => $translator->_('Nepal'),
                'nl' => $translator->_('Netherlands'),
                'an' => $translator->_('Netherlands antilles'),
                'nc' => $translator->_('New caledonia'),
                'nz' => $translator->_('New zealand'),
                'ni' => $translator->_('Nicaragua'),
                'ne' => $translator->_('Niger'),
                'ng' => $translator->_('Nigeria'),
                'nu' => $translator->_('Niue'),
                'nf' => $translator->_('Norfolk island'),
                'mp' => $translator->_('Northern mariana islands'),
                'no' => $translator->_('Norway'),
                'om' => $translator->_('Oman'),
                'pk' => $translator->_('Pakistan'),
                'pw' => $translator->_('Palau'),
                'ps' => $translator->_('Palestinian territory, Occupied'),
                'pa' => $translator->_('Panama'),
                'pg' => $translator->_('Papua new guinea'),
                'py' => $translator->_('Paraguay'),
                'pe' => $translator->_('Peru'),
                'ph' => $translator->_('Philippines'),
                'pn' => $translator->_('Pitcairn'),
                'pl' => $translator->_('Poland'),
                'pt' => $translator->_('Portugal'),
                'pr' => $translator->_('Puerto rico'),
                'qa' => $translator->_('Qatar'),
                're' => $translator->_('Reunion'),
                'ro' => $translator->_('Romania'),
                'ru' => $translator->_('Russian federation'),
                'rw' => $translator->_('Rwanda'),
                'bl' => $translator->_('Saint barthÃ©lemy'),
                'sh' => $translator->_('Saint helena'),
                'kn' => $translator->_('Saint kitts and nevis'),
                'lc' => $translator->_('Saint lucia'),
                'mf' => $translator->_('Saint martin'),
                'pm' => $translator->_('Saint pierre and miquelon'),
                'vc' => $translator->_('Saint vincent and the grenadines'),
                'ws' => $translator->_('Samoa'),
                'sm' => $translator->_('San marino'),
                'st' => $translator->_('Sao tome and principe'),
                'sa' => $translator->_('Saudi arabia'),
                'sn' => $translator->_('Senegal'),
                'rs' => $translator->_('Serbia'),
                'sc' => $translator->_('Seychelles'),
                'sl' => $translator->_('Sierra leone'),
                'sg' => $translator->_('Singapore'),
                'sk' => $translator->_('Slovakia'),
                'si' => $translator->_('Slovenia'),
                'sb' => $translator->_('Solomon islands'),
                'so' => $translator->_('Somalia'),
                'za' => $translator->_('South africa'),
                'gs' => $translator->_('South georgia and the south sandwich islands'),
                'es' => $translator->_('Spain'),
                'lk' => $translator->_('Sri lanka'),
                'sd' => $translator->_('Sudan'),
                'sr' => $translator->_('Suriname'),
                'sj' => $translator->_('Svalbard and jan mayen'),
                'sz' => $translator->_('Swaziland'),
                'se' => $translator->_('Sweden'),
                'ch' => $translator->_('Switzerland'),
                'sy' => $translator->_('Syrian arab republic'),
                'tw' => $translator->_('Taiwan, Province of china'),
                'tj' => $translator->_('Tajikistan'),
                'tz' => $translator->_('Tanzania, United republic of'),
                'th' => $translator->_('Thailand'),
                'tl' => $translator->_('Timor-leste'),
                'tg' => $translator->_('Togo'),
                'tk' => $translator->_('Tokelau'),
                'to' => $translator->_('Tonga'),
                'tt' => $translator->_('Trinidad and tobago'),
                'tn' => $translator->_('Tunisia'),
                'tr' => $translator->_('Turkey'),
                'tm' => $translator->_('Turkmenistan'),
                'tc' => $translator->_('Turks and caicos islands'),
                'tv' => $translator->_('Tuvalu'),
                'ug' => $translator->_('Uganda'),
                'ua' => $translator->_('Ukraine'),
                'ae' => $translator->_('United arab emirates'),
                'gb' => $translator->_('United kingdom'),
                'us' => $translator->_('United states'),
                'um' => $translator->_('United states minor outlying islands'),
                'uy' => $translator->_('Uruguay'),
                'uz' => $translator->_('Uzbekistan'),
                'vu' => $translator->_('Vanuatu'),
                've' => $translator->_('Venezuela'),
                'vn' => $translator->_('Viet nam'),
                'vg' => $translator->_('Virgin islands, British'),
                'vi' => $translator->_('Virgin islands, U.S.'),
                'wf' => $translator->_('Wallis and futuna'),
                'eh' => $translator->_('Western sahara'),
                'ye' => $translator->_('Yemen'),
                'zm' => $translator->_('Zambia'),
                'zw' => $translator->_('Zimbabwe')
            );
            asort(self::$localizedCountries[$locale_string]);
        }
        if (is_array($filter)) {
            return array_intersect_key(self::$localizedCountries[$locale_string], array_flip($filter));
        } else {
            return self::$localizedCountries[$locale_string];
        }
    }

    /**
     * @return array
     */
    static function getLanguages() {
        $application = Application::getInstance();
        $locale = $application->getLocale();
        $translator = ($locale instanceof Locale) ? $locale->getTranslator() : new LocaleTranslator(new LocaleTranslatorDriverMock());
        $locale_string = $translator->getDriver()->getLocaleString();
        if (!array_key_exists($locale_string, self::$localizedLanguages)) {
            self::$localizedLanguages[$locale_string] = array(
                'aa' => $translator->_('Afar'),
                'ab' => $translator->_('Abkhazian'),
                'af' => $translator->_('Afrikaans'),
                'am' => $translator->_('Amharic'),
                'ar' => $translator->_('Arabic'),
                'as' => $translator->_('Assamese'),
                'ay' => $translator->_('Aymara'),
                'az' => $translator->_('Azerbaijani'),
                'ba' => $translator->_('Bashkir'),
                'be' => $translator->_('Byelorussian'),
                'bg' => $translator->_('Bulgarian'),
                'bh' => $translator->_('Bihari'),
                'bi' => $translator->_('Bislama'),
                'bn' => $translator->_('Bengali; bangla'),
                'bo' => $translator->_('Tibetan'),
                'br' => $translator->_('Breton'),
                'ca' => $translator->_('Catalan'),
                'co' => $translator->_('Corsican'),
                'cs' => $translator->_('Czech'),
                'cy' => $translator->_('Welsh'),
                'da' => $translator->_('Danish'),
                'de' => $translator->_('German'),
                'dz' => $translator->_('Bhutani'),
                'el' => $translator->_('Greek'),
                'en' => $translator->_('English'),
                'eo' => $translator->_('Esperanto'),
                'es' => $translator->_('Spanish'),
                'et' => $translator->_('Estonian'),
                'eu' => $translator->_('Basque'),
                'fa' => $translator->_('Persian'),
                'fi' => $translator->_('Finnish'),
                'fj' => $translator->_('Fiji'),
                'fo' => $translator->_('Faroese'),
                'fr' => $translator->_('French'),
                'fy' => $translator->_('Frisian'),
                'ga' => $translator->_('Irish'),
                'gd' => $translator->_('Scots gaelic'),
                'gl' => $translator->_('Galician'),
                'gn' => $translator->_('Guarani'),
                'gu' => $translator->_('Gujarati'),
                'ha' => $translator->_('Hausa'),
                'he' => $translator->_('Hebrew (formerly iw)'),
                'hi' => $translator->_('Hindi'),
                'hr' => $translator->_('Croatian'),
                'hu' => $translator->_('Hungarian'),
                'hy' => $translator->_('Armenian'),
                'ia' => $translator->_('Interlingua'),
                'id' => $translator->_('Indonesian (formerly in)'),
                'ie' => $translator->_('Interlingue'),
                'ik' => $translator->_('Inupiak'),
                'is' => $translator->_('Icelandic'),
                'it' => $translator->_('Italian'),
                'iu' => $translator->_('Inuktitut'),
                'ja' => $translator->_('Japanese'),
                'jw' => $translator->_('Javanese'),
                'ka' => $translator->_('Georgian'),
                'kk' => $translator->_('Kazakh'),
                'kl' => $translator->_('Greenlandic'),
                'km' => $translator->_('Cambodian'),
                'kn' => $translator->_('Kannada'),
                'ko' => $translator->_('Korean'),
                'ks' => $translator->_('Kashmiri'),
                'ku' => $translator->_('Kurdish'),
                'ky' => $translator->_('Kirghiz'),
                'la' => $translator->_('Latin'),
                'ln' => $translator->_('Lingala'),
                'lo' => $translator->_('Laothian'),
                'lt' => $translator->_('Lithuanian'),
                'lv' => $translator->_('Latvian, lettish'),
                'mg' => $translator->_('Malagasy'),
                'mi' => $translator->_('Maori'),
                'mk' => $translator->_('Macedonian'),
                'ml' => $translator->_('Malayalam'),
                'mn' => $translator->_('Mongolian'),
                'mo' => $translator->_('Moldavian'),
                'mr' => $translator->_('Marathi'),
                'ms' => $translator->_('Malay'),
                'mt' => $translator->_('Maltese'),
                'my' => $translator->_('Burmese'),
                'na' => $translator->_('Nauru'),
                'ne' => $translator->_('Nepali'),
                'nl' => $translator->_('Dutch'),
                'no' => $translator->_('Norwegian'),
                'oc' => $translator->_('Occitan'),
                'om' => $translator->_('(Afan) Oromo'),
                'or' => $translator->_('Oriya'),
                'pa' => $translator->_('Punjabi'),
                'pl' => $translator->_('Polish'),
                'ps' => $translator->_('Pashto, pushto'),
                'pt' => $translator->_('Portuguese'),
                'qu' => $translator->_('Quechua'),
                'rm' => $translator->_('Rhaeto-romance'),
                'rn' => $translator->_('Kirundi'),
                'ro' => $translator->_('Romanian'),
                'ru' => $translator->_('Russian'),
                'rw' => $translator->_('Kinyarwanda'),
                'sa' => $translator->_('Sanskrit'),
                'sd' => $translator->_('Sindhi'),
                'sg' => $translator->_('Sangho'),
                'sh' => $translator->_('Serbo-croatian'),
                'si' => $translator->_('Sinhalese'),
                'sk' => $translator->_('Slovak'),
                'sl' => $translator->_('Slovenian'),
                'sm' => $translator->_('Samoan'),
                'sn' => $translator->_('Shona'),
                'so' => $translator->_('Somali'),
                'sq' => $translator->_('Albanian'),
                'sr' => $translator->_('Serbian'),
                'ss' => $translator->_('Siswati'),
                'st' => $translator->_('Sesotho'),
                'su' => $translator->_('Sundanese'),
                'sv' => $translator->_('Swedish'),
                'sw' => $translator->_('Swahili'),
                'ta' => $translator->_('Tamil'),
                'te' => $translator->_('Telugu'),
                'tg' => $translator->_('Tajik'),
                'th' => $translator->_('Thai'),
                'ti' => $translator->_('Tigrinya'),
                'tk' => $translator->_('Turkmen'),
                'tl' => $translator->_('Tagalog'),
                'tn' => $translator->_('Setswana'),
                'to' => $translator->_('Tonga'),
                'tr' => $translator->_('Turkish'),
                'ts' => $translator->_('Tsonga'),
                'tt' => $translator->_('Tatar'),
                'tw' => $translator->_('Twi'),
                'ug' => $translator->_('Uighur'),
                'uk' => $translator->_('Ukrainian'),
                'ur' => $translator->_('Urdu'),
                'uz' => $translator->_('Uzbek'),
                'vi' => $translator->_('Vietnamese'),
                'vo' => $translator->_('Volapuk'),
                'wo' => $translator->_('Wolof'),
                'xh' => $translator->_('Xhosa'),
                'yi' => $translator->_('Yiddish (formerly ji)'),
                'yo' => $translator->_('Yoruba'),
                'za' => $translator->_('Zhuang'),
                'zh' => $translator->_('Chinese'),
                'zu' => $translator->_('Zulu')
            );
            asort(self::$localizedLanguages);
        }
        return self::$localizedLanguages[$locale_string];
    }
}